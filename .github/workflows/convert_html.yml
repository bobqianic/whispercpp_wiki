name: Compile and Deploy Jupyter Book to GitHub Pages

on:
  push:
    branches: ["main"]
    paths:
    - 'mynewbook/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  compile-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # 2. Checkout the repository
    - name: Checkout
      uses: actions/checkout@v2

    # 3. Install Python 3.11
    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: 3.11

    # 4. Install dependencies
    - name: Install dependencies
      run: |
        pip install -U jupyter-book

    # 5. Build the Jupyter Book from the mynewbook folder
    - name: Build the book
      run: |
        jupyter-book build mynewbook

    # 6. Commit the built book to a new branch
    - name: Commit to a new branch and push
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        rm -rf docs/*
        mv mynewbook/_build/html/* docs/
        git checkout -b update-jupyter-book-$(date +'%Y%m%d%H%M%S')
        git add docs/
        git commit -m "Update Jupyter Book in doc folder" || echo "No changes to commit"
        git push origin HEAD

    # 7. Create a pull request to merge changes to main branch
    - name: Create Pull Request
      uses: repo-sync/pull-request@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        destination_branch: "main"
        pr_title: "Update Jupyter Book"
        pr_body: "This PR updates the Jupyter Book in the `docs` folder."
        pr_label: "jupyter-book-update"

    # 8. Optionally, if you wish to auto-merge the PR, you can use an action for that.
    # But be cautious, as this could potentially bypass some important checks.
